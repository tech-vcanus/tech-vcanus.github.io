I"(!<p>Written By <a href="https://github.com/nurring">Nuri Na</a>, <a href="https://github.com/jjangchan">KJ Jang</a>, VCANUS</p>

<p><code class="highlighter-rouge">GStreamer</code> 는 파이프라인 기반의 멀티미디어 프레임워크이다. 특정 포맷의 파일을 읽고, 처리하여, 다른 포맷으로 전달하는 시스템을 빌드할 수 있다.</p>

<p><code class="highlighter-rouge">RTSP</code> 는 미디어 서버 스트리밍에 이용되는 네트워크 프로토콜이다.</p>

<h2 id="installation">Installation</h2>

<p><em>Ubuntu18.04 기준</em></p>

<h3 id="gstreamer">GStreamer</h3>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update <span class="o">&amp;&amp;</span> apt <span class="nb">install</span> <span class="nt">-y</span> gstreamer1.0-tools <span class="se">\</span>
gstreamer1.0-plugins-base <span class="se">\</span>
gstreamer1.0-plugins-good <span class="se">\</span>
gstreamer1.0-plugins-bad <span class="se">\</span>
gstreamer1.0-plugins-ugly <span class="se">\</span>
gstreamer1.0-libav <span class="se">\</span>
python-gst-1.0 
</code></pre></div></div>

<h3 id="rtsp-server">RTSP Server</h3>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>gir1.2-gst-rtsp-server-1.0
</code></pre></div></div>

<h3 id="v4l2">v4l2</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>v4l-utils
</code></pre></div></div>

<h2 id="real-time-streaming-architecture">Real Time Streaming Architecture</h2>

<p><img src="/assets/images/gstreamer_rtsp.png" alt="architecture" /></p>

<h2 id="v4l2-basic">V4L2 Basic</h2>

<p>Video for Linux ~ 리눅스에서 카메라 입력을 받기 위한 표준 인터페이스</p>

<p>dev 디렉토리 내 video* 장치 파일이 생성 되고, 사용자 프로그램이 커널을 통해 시스템 하드웨어에 접근할 수 있다.</p>

<ol>
  <li>
    <p>지원 이미지 포맷</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> v4l2-ctl <span class="nt">--list-formats</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>지원 이미지 포맷 &amp; 해상도</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>v4l2-ctl <span class="nt">--list-formats-ext</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>특정 디바이스 정보</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>v4l2-ctl <span class="nt">-d</span> /dev/video0 <span class="nt">--list-formats</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>카메라 모든 정보 확인</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>v4l2-ctl <span class="nt">--all</span>
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="gstreamer-basic">GStreamer Basic</h2>

<h3 id="foundations">Foundations</h3>

<ul>
  <li>
    <p>Elements</p>

    <p>모든 플러그인은 <code class="highlighter-rouge">element</code>가 될 수 있다. 하나의 element는 하나의 특정한 기능을 한다.</p>
  </li>
  <li>
    <p>Pads</p>

    <p><code class="highlighter-rouge">pad</code>는 element의 인풋과 아웃풋으로 element를 연결한다(플러그나 포트처럼). 인풋쪽을 sink, 아웃풋 쪽을 source라고 한다.</p>
  </li>
  <li>
    <p>Bins, Pipelines</p>

    <p><code class="highlighter-rouge">bin</code>은 element들을 담는 컨테이너이다.</p>
  </li>
  <li>
    <p>Pipelines</p>

    <p><code class="highlighter-rouge">pipeline</code>은 최상위 레벨의 bin이다.  <code class="highlighter-rouge">PAUSED</code> / <code class="highlighter-rouge">PLAYING</code> 등 상태를 지정하여 데이터 흐름을 제어할 수 있다.</p>
  </li>
</ul>

<h3 id="command-line-tools">Command line tools</h3>

<ul>
  <li>
    <p>gst-launch-1.0</p>

    <p>GStreamer 파이프라인을 빌드, 실행</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Format</span>
gst-launch-1.0 <span class="o">[</span>OPTIONS] PIPELINE-DESCRIPTION
<span class="c"># Example ~ Display only MPEG-1 video file, outputting to an X display window</span>
gst-launch-1.0 filesrc <span class="nv">location</span><span class="o">=</span>videofile.mpg <span class="o">!</span> dvddemux <span class="o">!</span> mpeg2dec <span class="o">!</span> xvimagesink
</code></pre></div>    </div>

    <p>More Information about gst-launch-1.0 <a href="https://gstreamer.freedesktop.org/documentation/tools/gst-launch.html?gi-language=c">here</a>.</p>
  </li>
  <li>
    <p>gst-inspect-1.0</p>

    <p>GStreamer의 플러그인/엘리먼트 정보 확인</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Example</span>
gst-inspect-1.0 audiotestsrc
  
<span class="c"># ...and results</span>
Factory Details:
  Rank                     none <span class="o">(</span>0<span class="o">)</span>
  Long-name                Audio <span class="nb">test source
  </span>Klass                    Source/Audio
  Description              Creates audio <span class="nb">test </span>signals of given frequency and volume
  Author                   Stefan Kost &lt;ensonic@users.sf.net&gt;
  
Plugin Details:
  Name                     audiotestsrc
  Description              Creates audio <span class="nb">test </span>signals of given frequency and volume
  Filename                 /usr/lib/gstreamer-1.0/libgstaudiotestsrc.so
  Version                  1.8.1
  License                  LGPL
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="gstreamer-rtsp-server-build">Gstreamer-RTSP-Server-Build</h3>

<ol>
  <li>다운로드 gst-rtsp-servr-1.14.2.tar.xz (링크)</li>
</ol>

<ul>
  <li>gst-rtsp-server https://gstreamer.freedesktop.org/src/gst-rtsp-server/ .Focus on version 1.14.2 tar.xz</li>
</ul>

<ol>
  <li>Unpack tar.xz files
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">tar</span> <span class="nt">-xf</span> &lt;filename&gt;
</code></pre></div>    </div>
  </li>
  <li>
    <p>Change into each of the unpacked dirs</p>
  </li>
  <li>Execute these commands in each directory
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>gst-rtsp-server-1.14.2
./configure
make
<span class="nb">sudo </span>make <span class="nb">install</span>
</code></pre></div>    </div>
    <p>**./configure 오류 발생 시 **</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">sudo </span>apt-get <span class="nb">install </span>gtk-doc-tool
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="run-gstreamer-rtsp-server">Run Gstreamer-RTSP-Server</h3>
<p>example) dev/video0에 연결 된 MJPEG 코덱 카메라 Gstreamer 파이프 라인</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./test-launch  <span class="nt">--gst-debug</span><span class="o">=</span>3 <span class="s1">'( v4l2src device=/dev/video0 ! jpegdec ! videoconvert ! queue max-size-buffers=0 max-size-time=0 max-size-bytes=0 min-threshold-time=0 ! x264enc ! video/x-h264,width=1024,height=576,framerate=30/1 ! h264parse ! rtph264pay name=pay0 pt=96 )'</span>
</code></pre></div></div>
<ul>
  <li>jpegdec : Decodes jpeg images.</li>
  <li>videoconvert : Convert video frames between a great variety of video formats.</li>
  <li>x264enc : This element encodes raw video into H264 compressed data, also otherwise known as MPEG-4 AVC (Advanced Video Codec).</li>
  <li>h264parse : Parses H.264 streams</li>
  <li>rtph264pay : Payload-encode H264 video into RTP packets (RFC 3984)</li>
</ul>

<h3 id="code-with-c-java-script-python">Code with C, Java Script, Python</h3>

<p>Without above CLI Commands, You can build application using GStreamer Plug-ins with C, Java Script, Python.  Check out the API refernece <a href="https://gstreamer.freedesktop.org/documentation/gstreamer/running.html?gi-language=c">here</a>.</p>

:ET